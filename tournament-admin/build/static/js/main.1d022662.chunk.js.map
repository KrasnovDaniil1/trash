{"version":3,"sources":["actions/index.js","constants/action-types.js","views/Main/Main.jsx","views/Main/index.js","views/Fight/Fight.jsx","views/Fight/index.js","views/Fights/Fights.jsx","views/Fights/index.js","views/Fighters/Fighters.jsx","views/Fighters/index.js","views/Judges/Judges.jsx","views/Judges/index.js","components/Header/Header.jsx","components/Header/index.js","App.js","serviceWorker.js","reducers/index.js","sagas/FightsSaga.js","sagas/FightersSaga.js","sagas/JudgesSaga.js","sagas/RoundsSaga.js","sagas/AddFighterSaga.js","sagas/AddFightSaga.js","sagas/UpdateFighterSaga.js","sagas/UpdateFightSaga.js","sagas/StartFightSaga.js","sagas/FinishFightSaga.js","sagas/UpdateRoundSaga.js","sagas/StartRoundSaga.js","sagas/PauseRoundSaga.js","sagas/StopRoundSaga.js","sagas/UpdateJudgeSaga.js","sagas/DeleteFighterSaga.js","sagas/DeleteFightSaga.js","sagas/DeleteJudgeSaga.js","sagas/AddJudgeSaga.js","sagas/AddRoundSaga.js","sagas/FightSaga.js","sagas/CurrentFightSaga.js","sagas/index.js","store/index.js","index.js"],"names":["startFight","id","data","type","finishFight","Main","props","state","intervalId","this","requestCurrentFight","prevProps","currentFight","requestRounds","clearInterval","stopRound","pauseRound","startRound","fightId","number","console","log","rounds_count","createRound","startedAt","roundDuration","startMoment","moment","remainingSeconds","duration","diff","asSeconds","Math","abs","format","className","red_fighter","blue_fighter","attack_judge_1","attack_judge_2","attack_judge_3","defence_judge_1","defence_judge_2","defence_judge_3","onClick","bind","status","first_name","last_name","red_points","blue_points","max_rounds","round_duration","attack_points_for_action","defence_points_for_action","rounds","sort","a","b","map","round","index","key","toString","finishRound","remainingTime","started_at","red_attack_judge_1_points","blue_attack_judge_1_points","red_attack_judge_2_points","blue_attack_judge_2_points","red_attack_judge_3_points","blue_attack_judge_3_points","red_defence_judge_1_points","blue_defence_judge_1_points","red_defence_judge_2_points","blue_defence_judge_2_points","red_defence_judge_3_points","blue_defence_judge_3_points","Component","connect","dispatch","updateRound","Fight","match","params","requestFight","fight","red_fighter_id","blue_fighter_id","attack_judge_1_id","attack_judge_2_id","attack_judge_3_id","defence_judge_1_id","defence_judge_2_id","defence_judge_3_id","Fights","newFightRedIdHandleChange","newFightRedId","setState","newFightBlueIdHandleChange","newFightBlueId","newFightAttackJudge1HandleChange","newFightAttackJudge1","newFightAttackJudge2HandleChange","newFightAttackJudge2","newFightAttackJudge3HandleChange","newFightAttackJudge3","newFightDefenceJudge1HandleChange","newFightDefenceJudge1","newFightDefenceJudge2HandleChange","newFightDefenceJudge2","newFightDefenceJudge3HandleChange","newFightDefenceJudge3","newFightMaxRoundsHandleChange","event","newFightMaxRounds","target","value","newFightRoundDurationHandleChange","newFightRoundDuration","newFightDefencePointsForPressureHandleChange","newFightDefencePointsForPressure","newFightAttackPointsForPressureHandleChange","newFightAttackPointsForPressure","newFightForm","requestJudges","requestFighters","requestFights","fighters","concat","fighter","label","judges","judge","e","createFight","preventDefault","deleteFight","hideNewFightForm","showNewFightForm","fightCreateErrors","length","item","onChange","options","fightersForSelect","placeholder","judgesForSelect","fights","to","pathname","fightRedId","fightBlueId","fightAttackJudge1","fightAttackJudge2","fightAttackJudge3","fightDefenceJudge1","fightDefenceJudge2","fightDefenceJudge3","fightMaxRounds","fightRoundDuration","fightAttackPointsForAction","fightDefencePointsForAction","updateFight","Fighters","newFighterFirstnameHandleChange","newFighterFirstname","newFighterLastnameHandleChange","newFighterLastname","updateFighterFirstnameHandleChange","updateFighterFirstname","updateFighterLastnameHandleChange","updateFighterLastname","updateFighterId","updateFighter","deleteFighter","createFighter","fighterCreateErrors","hideFighterUpdateForm","showFighterUpdateForm","Judges","newJudgeFirstnameHandleChange","newJudgeFirstname","newJudgeLastnameHandleChange","newJudgeLastname","updateJudgeFirstnameHandleChange","updateJudgeFirstname","updateJudgeLastnameHandleChange","updateJudgeLastname","updateJudgeId","deleteJudge","createJudge","updateJudge","judgeCreateErrors","hideJudgeUpdateForm","showJudgeUpdateForm","Header","App","exact","path","component","withRouter","Boolean","window","location","hostname","initialState","rootReducer","action","payload","error","response","fighterCreateErrorserrors","fightCreateErrorserrors","watcherSaga","workerSaga","takeLatest","call","getData","put","axios","get","process","then","res","all","method","withCredentials","parseInt","url","fight_id","rootSaga","FightsSaga","FightersSaga","JudgesSaga","FightSaga","RoundsSaga","CurrentFightSaga","AddFighterSaga","AddFightSaga","UpdateFighterSaga","UpdateFightSaga","StartFightSaga","FinishFightSaga","UpdateJudgeSaga","DeleteFighterSaga","DeleteFightSaga","DeleteJudgeSaga","AddJudgeSaga","AddRoundSaga","UpdateRoundSaga","StartRoundSaga","PauseRoundSaga","StopRoundSaga","initialiseSagaMiddleware","createSagaMiddleware","store","createStore","compose","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1d022662.chunk.js","sourcesContent":["import {\n  FIGHTS_REQUESTED,\n  FIGHTERS_REQUESTED,\n  JUDGES_REQUESTED,\n  ROUNDS_REQUESTED,\n  FIGHT_REQUESTED,\n  FIGHTER_CREATE_REQUESTED,\n  FIGHT_CREATE_REQUESTED,\n  FIGHTER_DELETE_REQUESTED,\n  FIGHT_DELETE_REQUESTED,\n  JUDGE_DELETE_REQUESTED,\n  JUDGE_UPDATE_REQUESTED,\n  JUDGE_CREATE_REQUESTED,\n  ROUND_CREATE_REQUESTED,\n  FIGHTER_UPDATE_REQUESTED,\n  FIGHT_UPDATE_REQUESTED,\n  FIGHT_START_REQUESTED,\n  FIGHT_FINISH_REQUESTED,\n  ROUND_UPDATE_REQUESTED,\n  ROUND_START_REQUESTED,\n  ROUND_PAUSE_REQUESTED,\n  ROUND_STOP_REQUESTED,\n  CURRENT_FIGHT_REQUESTED\n} from \"../constants/action-types\";\n\nexport function requestFights() {\n  return { type: FIGHTS_REQUESTED }\n};\n\nexport function requestCurrentFight() {\n  return { type: CURRENT_FIGHT_REQUESTED }\n};\n\nexport function requestFighters() {\n  return { type: FIGHTERS_REQUESTED }\n};\n\nexport function createFighter(first_name, last_name) {\n  return { type: FIGHTER_CREATE_REQUESTED, first_name, last_name }\n};\n\nexport function createRound(fightId, number) {\n  return { type: ROUND_CREATE_REQUESTED, fightId, number }\n};\n\nexport function requestRounds(fightId) {\n  return { type: ROUNDS_REQUESTED, fightId }\n};\n\nexport function createFight(\n  fightRedId,\n  fightBlueId,\n  fightAttackJudge1,\n  fightAttackJudge2,\n  fightAttackJudge3,\n  fightDefenceJudge1,\n  fightDefenceJudge2,\n  fightDefenceJudge3,\n  fightMaxRounds,\n  fightRoundDuration,\n  fightAttackPointsForAction,\n  fightDefencePointsForAction\n) {\n  return {\n    type: FIGHT_CREATE_REQUESTED,\n    fightRedId,\n    fightBlueId,\n    fightAttackJudge1,\n    fightAttackJudge2,\n    fightAttackJudge3,\n    fightDefenceJudge1,\n    fightDefenceJudge2,\n    fightDefenceJudge3,\n    fightMaxRounds,\n    fightRoundDuration,\n    fightAttackPointsForAction,\n    fightDefencePointsForAction\n  }\n};\n\nexport function updateFighter(id, first_name, last_name) {\n  return { type: FIGHTER_UPDATE_REQUESTED, id, first_name, last_name }\n};\n\nexport function updateFight(id) {\n  return { type: FIGHT_UPDATE_REQUESTED, id }\n};\n\nexport function startFight(id, data) {\n  return { type: FIGHT_START_REQUESTED, id, data }\n};\n\nexport function finishFight(id, data) {\n  return { type: FIGHT_FINISH_REQUESTED, id, data }\n};\n\n\nexport function updateRound(id, data) {\n  return { type: ROUND_UPDATE_REQUESTED, id, data }\n};\n\nexport function startRound(id) {\n  return { type: ROUND_START_REQUESTED, id }\n};\n\nexport function pauseRound(id) {\n  return { type: ROUND_PAUSE_REQUESTED, id }\n};\n\nexport function stopRound(id) {\n  return { type: ROUND_STOP_REQUESTED, id }\n};\n\nexport function updateJudge(id, first_name, last_name) {\n  return { type: JUDGE_UPDATE_REQUESTED, id, first_name, last_name }\n};\n\nexport function deleteFighter(id) {\n  return { type: FIGHTER_DELETE_REQUESTED, id }\n};\n\nexport function deleteFight(id) {\n  return { type: FIGHT_DELETE_REQUESTED, id }\n};\n\nexport function deleteJudge(id) {\n  return { type: JUDGE_DELETE_REQUESTED, id }\n};\n\nexport function createJudge(first_name, last_name) {\n  return { type: JUDGE_CREATE_REQUESTED, first_name, last_name }\n};\n\nexport function requestJudges() {\n  return { type: JUDGES_REQUESTED }\n};\n\nexport function requestFight(id) {\n  return { type: FIGHT_REQUESTED, id }\n};\n\n","export const FIGHTERS_REQUESTED = \"FIGHTERS_REQUESTED\";\nexport const FIGHTERS_LOADED = \"FIGHTERS_LOADED\";\nexport const FIGHTS_REQUESTED = \"FIGHTS_REQUESTED\";\nexport const FIGHTS_LOADED = \"FIGHTS_LOADED\";\nexport const JUDGES_REQUESTED = \"JUDGES_REQUESTED\";\nexport const JUDGES_LOADED = \"JUDGES_LOADED\";\nexport const FIGHT_REQUESTED = \"FIGHT_REQUESTED\";\nexport const FIGHT_LOADED = \"FIGHT_LOADED\";\nexport const FIGHTER_CREATE_REQUESTED = \"FIGHTER_CREATE_REQUESTED\";\nexport const FIGHTER_CREATE_LOADED = \"FIGHTER_CREATE_LOADED\";\nexport const FIGHTER_CREATE_FAILURE = \"FIGHTER_CREATE_FAILURE\";\nexport const JUDGE_CREATE_REQUESTED = \"JUDGE_CREATE_REQUESTED\";\nexport const JUDGE_CREATE_LOADED = \"JUDGE_CREATE_LOADED\";\nexport const JUDGE_CREATE_FAILURE = \"JUDGE_CREATE_FAILURE\";\nexport const FIGHTER_DELETE_REQUESTED = \"FIGHTER_DELETE_REQUESTED\";\nexport const FIGHTER_DELETE_LOADED = \"FIGHTER_DELETE_LOADED\";\nexport const FIGHTER_DELETE_FAILURE = \"FIGHTER_DELETE_FAILURE\";\nexport const JUDGE_DELETE_REQUESTED = \"JUDGE_DELETE_REQUESTED\";\nexport const JUDGE_DELETE_LOADED = \"JUDGE_DELETE_LOADED\";\nexport const JUDGE_DELETE_FAILURE = \"JUDGE_DELETE_FAILURE\";\nexport const FIGHTER_UPDATE_REQUESTED = \"FIGHTER_UPDATE_REQUESTED\";\nexport const FIGHTER_UPDATE_LOADED = \"FIGHTER_UPDATE_LOADED\";\nexport const FIGHTER_UPDATE_FAILURE = \"FIGHTER_UPDATE_FAILURE\";\nexport const JUDGE_UPDATE_REQUESTED = \"JUDGE_UPDATE_REQUESTED\";\nexport const JUDGE_UPDATE_LOADED = \"JUDGE_UPDATE_LOADED\";\nexport const JUDGE_UPDATE_FAILURE = \"JUDGE_UPDATE_FAILURE\";\nexport const FIGHT_CREATE_REQUESTED = \"FIGHT_CREATE_REQUESTED\";\nexport const FIGHT_CREATE_LOADED = \"FIGHT_CREATE_LOADED\";\nexport const FIGHT_CREATE_FAILURE = \"FIGHT_CREATE_FAILURE\";\nexport const FIGHT_UPDATE_REQUESTED = \"FIGHT_UPDATE_REQUESTED\";\nexport const FIGHT_UPDATE_LOADED = \"FIGHT_UPDATE_LOADED\";\nexport const FIGHT_UPDATE_FAILURE = \"FIGHT_UPDATE_FAILURE\";\nexport const FIGHT_START_REQUESTED = \"FIGHT_START_REQUESTED\";\nexport const FIGHT_START_LOADED = \"FIGHT_START_LOADED\";\nexport const FIGHT_START_FAILURE = \"FIGHT_START_FAILURE\";\nexport const FIGHT_FINISH_REQUESTED = \"FIGHT_FINISH_REQUESTED\";\nexport const FIGHT_FINISH_LOADED = \"FIGHT_FINISH_LOADED\";\nexport const FIGHT_FINISH_FAILURE = \"FIGHT_FINISH_FAILURE\";\nexport const FIGHT_DELETE_REQUESTED = \"FIGHT_DELETE_REQUESTED\";\nexport const FIGHT_DELETE_LOADED = \"FIGHT_DELETE_LOADED\";\nexport const FIGHT_DELETE_FAILURE = \"FIGHT_DELETE_FAILURE\";\nexport const ROUND_CREATE_REQUESTED = \"ROUND_CREATE_REQUESTED\";\nexport const ROUND_CREATE_LOADED = \"ROUND_CREATE_LOADED\";\nexport const ROUND_CREATE_FAILURE = \"ROUND_CREATE_FAILURE\";\nexport const ROUND_UPDATE_REQUESTED = \"ROUND_UPDATE_REQUESTED\";\nexport const ROUND_UPDATE_LOADED = \"ROUND_UPDATE_LOADED\";\nexport const ROUND_UPDATE_FAILURE = \"ROUND_UPDATE_FAILURE\";\nexport const ROUND_START_REQUESTED = \"ROUND_START_REQUESTED\";\nexport const ROUND_START_LOADED = \"ROUND_START_LOADED\";\nexport const ROUND_START_FAILURE = \"ROUND_START_FAILURE\";\nexport const ROUND_PAUSE_REQUESTED = \"ROUND_PAUSE_REQUESTED\";\nexport const ROUND_PAUSE_LOADED = \"ROUND_PAUSE_LOADED\";\nexport const ROUND_PAUSE_FAILURE = \"ROUND_PAUSE_FAILURE\";\nexport const ROUND_STOP_REQUESTED = \"ROUND_STOP_REQUESTED\";\nexport const ROUND_STOP_LOADED = \"ROUND_STOP_LOADED\";\nexport const ROUND_STOP_FAILURE = \"ROUND_STOP_FAILURE\";\nexport const CURRENT_FIGHT_REQUESTED = \"CURRENT_FIGHT_REQUESTED\";\nexport const CURRENT_FIGHT_LOADED = \"CURRENT_FIGHT_LOADED\";\nexport const CURRENT_FIGHT_FAILURE = \"CURRENT_FIGHT_FAILURE\";\nexport const ROUNDS_REQUESTED = \"ROUNDS_REQUESTED\";\nexport const ROUNDS_LOADED = \"ROUNDS_LOADED\";\nexport const ROUNDS_FAILURE = \"ROUNDS_FAILURE\";","import React, { Component } from \"react\";\nimport './Main.scss';\nimport Select from 'react-select'\nimport { components } from 'react-select';\nimport { NavLink, Link } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport {\n  requestCurrentFight,\n  startFight,\n  finishFight,\n  updateRound,\n  startRound,\n  pauseRound,\n  stopRound,\n  createRound,\n  requestRounds,\n} from \"../../actions/index\";\nimport moment from 'moment';\nimport momentDurationFormatSetup from \"moment-duration-format\";\n\n// import { Nil } from \"tcomb\";\n\nclass Main extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      intervalId: null,\n\n    };\n  }\n\n  componentDidMount() {\n    this.props.requestCurrentFight();\n    // var intervalId = setInterval(this.timerLoading.bind(this), 200);\n    // this.setState({ intervalId: intervalId });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.currentFight !== prevProps.currentFight) {\n      this.props.requestRounds(this.props.currentFight.id);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n  timerLoading() {\n    this.props.requestCurrentFight();\n  }\n\n  finishFight(id) {\n    this.props.finishFight(id)\n  }\n\n  startFight(id) {\n    this.props.startFight(id)\n  }\n\n  finishRound(id) {\n    this.props.stopRound(id)\n  }\n\n  pauseRound(id) {\n    this.props.pauseRound(id)\n  }\n\n  startRound(id) {\n    this.props.startRound(id)\n  }\n\n  createRound(fightId, number) {\n    console.log(this.props.currentFight.rounds_count)\n    console.log(number)\n    this.props.createRound(fightId, number)\n  }\n\n  remainingTime(startedAt, roundDuration) {\n    let startMoment = moment(startedAt);\n    let duration = moment.duration(moment().diff(startMoment))\n    let remainingSeconds = duration.asSeconds() - roundDuration;\n    if (remainingSeconds < roundDuration) {\n      return moment.duration(Math.abs(remainingSeconds), 'seconds').format(\"mm:ss\");\n    } else {\n      return '00:00'\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"container-fluid\">\n        {this.props.currentFight &&\n          this.props.currentFight.red_fighter &&\n          this.props.currentFight.blue_fighter &&\n          this.props.currentFight.attack_judge_1 &&\n          this.props.currentFight.attack_judge_2 &&\n          this.props.currentFight.attack_judge_3 &&\n          this.props.currentFight.defence_judge_1 &&\n          this.props.currentFight.defence_judge_2 &&\n          this.props.currentFight.defence_judge_3 &&\n          <div className=\"row\">\n\n            <div className=\"col-md-5 \">\n\n              <div className=\"card mt-2\">\n                <div className=\"card-body\">\n\n                  <div className=\"btn-group float-right\" >\n                    <button className=\"btn btn-danger  btn-sm\" onClick={this.finishFight.bind(this, this.props.currentFight.id)}>Завершить</button>\n                  </div>\n\n                  <h5 className=\"card-title\">Текущий бой №{this.props.currentFight.id} &nbsp;\n\n                    {this.props.currentFight.status == 1 &&\n                      <small className=\"text-muted\">Текущий</small>\n                    }\n                    {this.props.currentFight.status == 2 &&\n                      <small className=\"text-muted\">Завершен</small>\n                    }\n                    {this.props.currentFight.status == 0 &&\n                      <small className=\"text-muted\">Запланирован</small>\n                    }\n\n                  </h5>\n\n\n\n                  <div>\n                    <div className=\"row\">\n                      <div className=\"col-md-6\">\n                        <p>Красный угол: <span className=\"text-danger\">{this.props.currentFight.red_fighter.first_name} {this.props.currentFight.red_fighter.last_name}</span> {this.props.currentFight.red_points}</p>\n                      </div>\n                      <div className=\"col-md-6\">\n                        <p>Синий угол: <span className=\"text-primary\">{this.props.currentFight.blue_fighter.first_name} {this.props.currentFight.blue_fighter.last_name}</span> {this.props.currentFight.blue_points}</p>\n                      </div>\n                    </div>\n\n\n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n                        <p>Количество раундов: {this.props.currentFight.max_rounds}</p>\n                      </div>\n                      <div className=\"col-md-12\">\n                        <p>Длительность раунда: {this.props.currentFight.round_duration}</p>\n                      </div>\n                      <div className=\"col-md-12\">\n                        <p>Количество очков за атаку: {this.props.currentFight.attack_points_for_action}</p>\n                      </div>\n                      <div className=\"col-md-12\">\n                        <p>Количество очков за защиту: {this.props.currentFight.defence_points_for_action}</p>\n                      </div>\n                    </div>\n\n\n                    <button className=\"btn btn-primary mt-2 mb-2\" onClick={this.createRound.bind(this, this.props.currentFight.id, this.props.currentFight.rounds_count + 1)}>Новый раунд</button>\n\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-7 \">\n\n              {this.props.rounds && this.props.rounds\n                .sort(function (a, b) {\n                  if (a.number < b.number) { return 1; }\n                  if (a.number > b.number) { return -1; }\n                  return 0;\n                }.bind(this))\n                .map((round, index) =>\n                  <div className=\"card mt-2\" key={index.toString()}>\n                    <div className=\"card-body\">\n                      <div className=\"btn-group mb-3 float-right\" >\n                        <button className=\"btn btn-primary  btn-sm\" onClick={this.startRound.bind(this, round.id)}>Начать</button>\n                        <button className=\"btn btn-danger  btn-sm\" onClick={this.pauseRound.bind(this, round.id)}>Остановить</button>\n                        <button className=\"btn btn-danger  btn-sm\" onClick={this.finishRound.bind(this, round.id)}>Завершить</button>\n                      </div>\n\n\n                      {round.status == 1 &&\n                        <div className=\"mr-2 mb-3 float-right\">\n                          {this.remainingTime(round.started_at, this.props.currentFight.round_duration)}\n                        </div>\n                      }\n\n                      <h6 className=\"card-title\">Раунд {round.number} &nbsp;\n\n                              {round.status == 1 &&\n                          <small className=\"text-muted\">Текущий</small>\n                        }\n                        {round.status == 2 &&\n                          <small className=\"text-muted\">Остановлен</small>\n                        }\n                        {round.status == 3 &&\n                          <small className=\"text-muted\">Завершен</small>\n                        }\n                        {round.status == 0 &&\n                          <small className=\"text-muted\">Запланирован</small>\n                        }\n\n                      </h6>\n                      <div className=\"clearfix\"></div>\n\n                      <div className=\"row\">\n                        <div className=\"col-md-6\">\n                          <table className=\"table table-sm\">\n                            <thead>\n                              <tr>\n                                <th className=\"w-50\">Судья атаки</th>\n                                <th>Красный</th>\n                                <th>Синий</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr>\n                                <td>{this.props.currentFight.attack_judge_1.first_name} {this.props.currentFight.attack_judge_1.last_name}</td>\n                                <td>{round.red_attack_judge_1_points}</td>\n                                <td>{round.blue_attack_judge_1_points}</td>\n                              </tr>\n                              <tr>\n                                <td>{this.props.currentFight.attack_judge_2.first_name} {this.props.currentFight.attack_judge_2.last_name}</td>\n                                <td>{round.red_attack_judge_2_points}</td>\n                                <td>{round.blue_attack_judge_2_points}</td>\n                              </tr>\n                              <tr>\n                                <td>{this.props.currentFight.attack_judge_3.first_name} {this.props.currentFight.attack_judge_3.last_name}</td>\n                                <td>{round.red_attack_judge_3_points}</td>\n                                <td>{round.blue_attack_judge_3_points}</td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </div>\n\n                        <div className=\"col-md-6\">\n                          <table className=\"table table-sm\">\n                            <thead>\n                              <tr>\n                                <th className=\"w-50\">Судья защиты</th>\n                                <th>Красный</th>\n                                <th>Синий</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr>\n                                <td>{this.props.currentFight.defence_judge_1.first_name} {this.props.currentFight.defence_judge_1.last_name}</td>\n                                <td>{round.red_defence_judge_1_points}</td>\n                                <td>{round.blue_defence_judge_1_points}</td>\n                              </tr>\n                              <tr>\n                                <td>{this.props.currentFight.defence_judge_2.first_name} {this.props.currentFight.defence_judge_2.last_name}</td>\n                                <td>{round.red_defence_judge_2_points}</td>\n                                <td>{round.blue_defence_judge_2_points}</td>\n                              </tr>\n                              <tr>\n                                <td>{this.props.currentFight.defence_judge_3.first_name} {this.props.currentFight.defence_judge_3.last_name}</td>\n                                <td>{round.red_defence_judge_3_points}</td>\n                                <td>{round.blue_defence_judge_3_points}</td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </div>\n\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n\n            </div>\n          </div>\n        }\n\n\n\n      </div>\n\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentFight: state.currentFight,\n    rounds: state.rounds,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    requestCurrentFight: () => dispatch(requestCurrentFight()),\n    requestRounds: (fightId) => dispatch(requestRounds(fightId)),\n    startFight: (id) => dispatch(startFight(id)),\n    finishFight: (id) => dispatch(finishFight(id)),\n    updateRound: (id, data) => dispatch(updateRound(id, data)),\n    startRound: (id) => dispatch(startRound(id)),\n    pauseRound: (id) => dispatch(pauseRound(id)),\n    stopRound: (id) => dispatch(stopRound(id)),\n    createRound: (fightId, number) => dispatch(createRound(fightId, number)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","import Main from './Main.jsx';\nexport default Main;","import React, { Component } from \"react\";\nimport './Fight.scss';\n\nimport { connect } from \"react-redux\";\nimport {\n\trequestFight,\n\tfinishFight,\n\tstartFight\n} from \"../../actions/index\";\n\nclass Fight extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { id } = this.props.match.params;\n\t\tthis.props.requestFight(id);\n\t}\n\n\tfinishFight(id) {\n\t\tthis.props.finishFight(id)\n\t}\n\n\tstartFight(id) {\n\t\tthis.props.startFight(id)\n\t}\n\n\trender() {\n\t\tlet { fight } = this.props;\n\t\tconsole.log(fight)\n\t\treturn (\n\t\t\t<div className=\"container-fluid\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t\t{fight &&\n\t\t\t\t\t\t\tfight.red_fighter_id &&\n\t\t\t\t\t\t\tfight.blue_fighter_id &&\n\t\t\t\t\t\t\tfight.attack_judge_1_id &&\n\t\t\t\t\t\t\tfight.attack_judge_2_id &&\n\t\t\t\t\t\t\tfight.attack_judge_3_id &&\n\t\t\t\t\t\t\tfight.defence_judge_1_id &&\n\t\t\t\t\t\t\tfight.defence_judge_2_id &&\n\t\t\t\t\t\t\tfight.defence_judge_3_id &&\n\t\t\t\t\t\t\t<div className=\"card mt-2\">\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\n\n\t\t\t\t\t\t\t\t\t<div className=\"btn-group float-right\" >\n\t\t\t\t\t\t\t\t\t\t{/* <button className=\"btn btn-danger  btn-sm\" onClick={this.finishFight.bind(this, fight.id)}>Завершить</button> */}\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<h5 className=\"card-title\">Бой {fight.id}</h5>\n\n\t\t\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t\t\t\t\t\t\t\t<p>Красный угол: <span className=\"text-danger\"> {fight.red_fighter.first_name} {fight.red_fighter.last_name}</span> {fight.red_points} </p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t\t\t\t\t\t\t\t<p>Синий угол: <span className=\"text-primary\"> {fight.blue_fighter.first_name} {fight.blue_fighter.last_name}</span> {fight.blue_points}</p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\n\t\t\t\t\t\t\t\t\t\t\t\t<p>Количество раундов: {fight.max_rounds}</p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\n\t\t\t\t\t\t\t\t\t\t\t\t<p>Длительность раунда: {fight.round_duration}</p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\n\t\t\t\t\t\t\t\t\t\t\t\t<p>Количество очков за атаку: {fight.attack_points_for_action}</p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\n\t\t\t\t\t\t\t\t\t\t\t\t<p>Количество очков за защиту: {fight.defence_points_for_action}</p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\n\n\t\t\t\t\t\t\t\t\t\t{/* <button className=\"btn btn-primary mt-2 mb-2\" onClick={this.createRound.bind(this, fight.id)}>Новый раунд</button> */}\n\n\t\t\t\t\t\t\t\t\t\t{fight.rounds && fight.rounds\n\t\t\t\t\t\t\t\t\t\t\t.sort(function (a, b) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (a.number < b.number) { return 1; }\n\t\t\t\t\t\t\t\t\t\t\t\tif (a.number > b.number) { return -1; }\n\t\t\t\t\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t\t\t\t\t}.bind(this))\n\t\t\t\t\t\t\t\t\t\t\t.map((round, index) =>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card mt-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"btn-group mb-3 float-right\" >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <button className=\"btn btn-primary  btn-sm\" onClick={this.startRound.bind(this, round.id)}>Начать</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-danger  btn-sm\" onClick={this.pauseRound.bind(this, round.id)}>Остановить</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-danger  btn-sm\" onClick={this.finishRound.bind(this, round.id)}>Завершить</button> */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{round.status == 1 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mr-2 mb-3 float-right\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.remainingTime(round.started_at, fight.round_duration)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"card-title\">Раунд {round.number} &nbsp;\n\n                              {round.status == 1 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small className=\"text-muted\">Текущий</small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{round.status == 2 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small className=\"text-muted\">Остановлен</small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{round.status == 3 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small className=\"text-muted\">Завершен</small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{round.status == 0 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small className=\"text-muted\">Запланирован</small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"clearfix\"></div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th className=\"w-50\">Судья атаки</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th className=\"bg-danger text-white\">Красный</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th className=\"bg-primary text-white\">Синий</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{fight.attack_judge_1.first_name} {fight.attack_judge_1.last_name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{round.red_attack_judge_1_points}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{round.blue_attack_judge_1_points}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{fight.attack_judge_2.first_name} {fight.attack_judge_2.last_name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{round.red_attack_judge_2_points}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{round.blue_attack_judge_2_points}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{fight.attack_judge_3.first_name} {fight.attack_judge_3.last_name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{round.red_attack_judge_3_points}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{round.blue_attack_judge_3_points}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th className=\"w-50\">Судья защиты</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th className=\"bg-danger text-white\">Красный</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th className=\"bg-primary text-white\">Синий</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{fight.defence_judge_1.first_name} {fight.defence_judge_1.last_name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{round.red_defence_judge_1_points}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{round.blue_defence_judge_1_points}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{fight.defence_judge_2.first_name} {fight.defence_judge_2.last_name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{round.red_defence_judge_2_points}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{round.blue_defence_judge_2_points}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{fight.defence_judge_3.first_name} {fight.defence_judge_3.last_name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{round.red_defence_judge_3_points}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{round.blue_defence_judge_3_points}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\n\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tfight: state.fight\n\t};\n};\n\nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t\trequestFight: (id) => dispatch(requestFight(id)),\n\t\tstartFight: (id) => dispatch(startFight(id)),\n\t\tfinishFight: (id) => dispatch(finishFight(id)),\n\t};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Fight);\n","import Fight from './Fight.jsx';\nexport default Fight;","import React, { Component } from \"react\";\nimport './Fights.scss';\nimport { NavLink, Link, Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport Select from 'react-select'\nimport {\n  requestFighters,\n  requestFights,\n  requestJudges,\n  createFight,\n  updateFight,\n  deleteFight,\n} from \"../../actions/index\";\n\nclass Fights extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newFightForm: false,\n      newFightRedId: null,\n      newFightBlueId: null,\n      newFightAttackJudge1: null,\n      newFightAttackJudge2: null,\n      newFightAttackJudge3: null,\n      newFightDefenceJudge1: null,\n      newFightDefenceJudge2: null,\n      newFightDefenceJudge3: null,\n      newFightMaxRounds: '',\n      newFightRoundDuration: '',\n      newFightDefencePointsForPressure: '',\n      newFightAttackPointsForPressure: '',\n    };\n  }\n\n  componentDidMount() {\n    this.props.requestJudges();\n    this.props.requestFighters();\n    this.props.requestFights();\n\n  }\n\n  showNewFightForm() {\n    this.setState({\n      newFightForm: true\n    })\n  }\n\n  hideNewFightForm() {\n    this.setState({\n      newFightForm: false\n    })\n  }\n\n\n  fightersForSelect() {\n    return this.props.fighters && [].concat(this.props.fighters).map((fighter, index) => {\n      return { value: fighter.id, label: fighter.first_name + ' ' + fighter.last_name }\n    }) || [];\n  }\n\n  judgesForSelect() {\n    return this.props.judges && [].concat(this.props.judges).map((judge, index) => {\n      return { value: judge.id, label: judge.first_name + ' ' + judge.last_name }\n    }) || [];\n  }\n\n  createFight(e) {\n    this.props.createFight(\n      this.state.newFightRedId ? this.state.newFightRedId.value : null,\n      this.state.newFightBlueId ? this.state.newFightBlueId.value : null,\n      this.state.newFightAttackJudge1 ? this.state.newFightAttackJudge1.value : null,\n      this.state.newFightAttackJudge2 ? this.state.newFightAttackJudge2.value : null,\n      this.state.newFightAttackJudge3 ? this.state.newFightAttackJudge3.value : null,\n      this.state.newFightDefenceJudge1 ? this.state.newFightDefenceJudge1.value : null,\n      this.state.newFightDefenceJudge2 ? this.state.newFightDefenceJudge2.value : null,\n      this.state.newFightDefenceJudge3 ? this.state.newFightDefenceJudge3.value : null,\n      this.state.newFightMaxRounds,\n      this.state.newFightRoundDuration,\n      this.state.newFightAttackPointsForPressure,\n      this.state.newFightDefencePointsForPressure,\n    )\n    e.preventDefault();\n  }\n\n  deleteFight(id) {\n    this.props.deleteFight(id)\n  }\n  newFightRedIdHandleChange = newFightRedId => {\n    this.setState({ newFightRedId });\n  };\n\n  newFightBlueIdHandleChange = newFightBlueId => {\n    this.setState({ newFightBlueId });\n  };\n\n  newFightAttackJudge1HandleChange = newFightAttackJudge1 => {\n    this.setState({ newFightAttackJudge1 });\n  };\n\n  newFightAttackJudge2HandleChange = newFightAttackJudge2 => {\n    this.setState({ newFightAttackJudge2 });\n  };\n\n  newFightAttackJudge3HandleChange = newFightAttackJudge3 => {\n    this.setState({ newFightAttackJudge3 });\n  };\n\n  newFightDefenceJudge1HandleChange = newFightDefenceJudge1 => {\n    this.setState({ newFightDefenceJudge1 });\n  };\n\n  newFightDefenceJudge2HandleChange = newFightDefenceJudge2 => {\n    this.setState({ newFightDefenceJudge2 });\n  };\n\n  newFightDefenceJudge3HandleChange = newFightDefenceJudge3 => {\n    this.setState({ newFightDefenceJudge3 });\n  };\n\n  newFightMaxRoundsHandleChange = event => {\n    this.setState({ newFightMaxRounds: event.target.value });\n  };\n\n  newFightRoundDurationHandleChange = event => {\n    this.setState({ newFightRoundDuration: event.target.value });\n  };\n\n  newFightDefencePointsForPressureHandleChange = event => {\n    this.setState({ newFightDefencePointsForPressure: event.target.value });\n  };\n\n  newFightAttackPointsForPressureHandleChange = event => {\n    this.setState({ newFightAttackPointsForPressure: event.target.value });\n  };\n\n\n  render() {\n    return (\n\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"card mt-2\">\n              <div className=\"card-body\">\n                <button className=\"btn float-right btn-secondary btn-sm  \" onClick={!this.state.newFightForm ? this.showNewFightForm.bind(this) : this.hideNewFightForm.bind(this)}>{!this.state.newFightForm ? \"Добавить\" : \"Отменить\"}</button>\n\n                <h5 className=\"card-title\">Все бои</h5>\n\n                <div className=\"clearfix\"></div>\n\n                {this.props.fightCreateErrors && this.props.fightCreateErrors.length > 0 &&\n                  <div className=\"row mb-2\">\n                    <div className=\"col-md-12 \">\n                      {this.props.fightCreateErrors.map((item, index) =>\n                        <div className=\"alert alert-danger\" key={index.toString()}>\n                          {item}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                }\n\n                {this.state.newFightForm &&\n                  <div className=\"row\">\n                    <div className=\"col-md-6 offset-md-6\">\n                      <form>\n                        <div className=\"form-row\">\n                          <div className=\"form-group col-md-6\">\n                            <Select\n                              value={this.state.newFightRedId}\n                              onChange={this.newFightRedIdHandleChange}\n                              options={this.fightersForSelect()}\n                              placeholder='Боец в красном углу...'\n                            />\n                          </div>\n                          <div className=\"form-group col-md-6\">\n                            <Select\n                              value={this.state.newFightBlueId}\n                              onChange={this.newFightBlueIdHandleChange}\n                              options={this.fightersForSelect()}\n                              placeholder='Боец в синем углу...'\n                            />\n                          </div>\n                        </div>\n                        <div className=\"form-row\">\n                          <div className=\"form-group col-md-6\">\n                            <Select\n                              value={this.state.newFightAttackJudge1}\n                              onChange={this.newFightAttackJudge1HandleChange}\n                              options={this.judgesForSelect()}\n                              placeholder='Первый судья атаки...'\n                            />\n                          </div>\n                          <div className=\"form-group col-md-6\">\n                            <Select\n                              value={this.state.newFightDefenceJudge1}\n                              onChange={this.newFightDefenceJudge1HandleChange}\n                              options={this.judgesForSelect()}\n                              placeholder='Первый судья защиты...'\n                            />\n                          </div>\n                        </div>\n                        <div className=\"form-row\">\n                          <div className=\"form-group col-md-6\">\n                            <Select\n                              value={this.state.newFightAttackJudge2}\n                              onChange={this.newFightAttackJudge2HandleChange}\n                              options={this.judgesForSelect()}\n                              placeholder='Второй судья атаки...'\n                            />\n                          </div>\n                          <div className=\"form-group col-md-6\">\n                            <Select\n                              value={this.state.newFightDefenceJudge2}\n                              onChange={this.newFightDefenceJudge2HandleChange}\n                              options={this.judgesForSelect()}\n                              placeholder='Второй судья защиты...'\n                            />\n                          </div>\n                        </div>\n                        <div className=\"form-row\">\n                          <div className=\"form-group col-md-6\">\n                            <Select\n                              value={this.state.newFightAttackJudge3}\n                              onChange={this.newFightAttackJudge3HandleChange}\n                              options={this.judgesForSelect()}\n                              placeholder='Третий судья атаки...'\n                            />\n                          </div>\n                          <div className=\"form-group col-md-6\">\n                            <Select\n                              value={this.state.newFightDefenceJudge3}\n                              onChange={this.newFightDefenceJudge3HandleChange}\n                              options={this.judgesForSelect()}\n                              placeholder='Третий судья защиты...'\n                            />\n                          </div>\n                        </div>\n                        <div className=\"form-row\">\n                          <div className=\"form-group col-md-6\">\n                            <input type=\"text\" className=\"form-control\"\n                              placeholder=\"Количество раундов\"\n                              value={this.state.newFightMaxRounds}\n                              onChange={this.newFightMaxRoundsHandleChange}\n                            />\n                          </div>\n                          <div className=\"form-group col-md-6\">\n                            <input type=\"text\" className=\"form-control\"\n                              placeholder=\"Длительность раунда в секундах\"\n                              value={this.state.newFightRoundDuration}\n                              onChange={this.newFightRoundDurationHandleChange}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"form-row\">\n                          <div className=\"form-group col-md-6\">\n                            <input type=\"text\" className=\"form-control\"\n                              placeholder=\"Количество очков за атаку\"\n                              value={this.state.newFightAttackPointsForPressure}\n                              onChange={this.newFightAttackPointsForPressureHandleChange}\n                            />\n                          </div>\n                          <div className=\"form-group col-md-6\">\n                            <input type=\"text\" className=\"form-control\"\n                              placeholder=\"Количество очков за защиту\"\n                              value={this.state.newFightDefencePointsForPressure}\n                              onChange={this.newFightDefencePointsForPressureHandleChange}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"form-row\">\n                          <div className=\"form-group col-md-2\">\n                            <button className=\"btn btn-secondary btn-block  \" onClick={this.createFight.bind(this)}>Добавить</button>\n                          </div>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                }\n\n                <div>\n                  <table className=\"table table-sm\">\n                    <thead>\n                      <tr>\n                        <th>#</th>\n                        <th>Красный угол</th>\n                        <th>Синий угол</th>\n                        <th>Статус</th>\n                        <th></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n\n                      {[].concat(this.props.fights).map((fight, index) =>\n\n                        <tr key={index.toString()}>\n                          <td>\n                            {fight.id}\n                          </td>\n                          <td>\n                            <p><span className=\"text-danger\">{fight.red_fighter.first_name} {fight.red_fighter.last_name}</span> {fight.red_points}</p>\n                          </td>\n                          <td>\n                            <p><span className=\"text-primary\">{fight.blue_fighter.first_name} {fight.blue_fighter.last_name}</span> {fight.blue_points}</p>\n                          </td>\n                          <td>\n                            {fight.status == 0 && \"Запланирован\"}\n                            {fight.status == 1 && \"Текущий\"}\n                            {fight.status == 2 && \"Завершен\"}\n                            {fight.started_at}\n                          </td>\n                          <td>\n                            <div className=\"btn-group float-right\" >\n                              {/* {fight.status == 1 &&\n                                <button className=\"btn btn-danger\" onClick={this.finishFight.bind(this, fight.id)}>Завершить</button>\n                              }\n                              {fight.status == 0 &&\n                                <button className=\"btn btn-primary\" onClick={this.startFight.bind(this, fight.id)}>Начать</button>\n                              } */}\n                              {fight.status == 0 &&\n                                <button className=\"btn btn-danger \" onClick={this.deleteFight.bind(this, fight.id)}>Удалить</button>\n                              }\n                              <NavLink to={{ pathname: '/fights/' + fight.id }} className=\"btn \">Детали</NavLink>\n                            </div>\n                          </td>\n                        </tr>\n                      )}\n\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    fights: state.fights,\n    fightCreateErrors: state.fightCreateErrors,\n    judges: state.judges,\n    fighters: state.fighters,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    requestFighters: () => dispatch(requestFighters()),\n    requestJudges: () => dispatch(requestJudges()),\n    requestFights: () => dispatch(requestFights()),\n    createFight: (\n      fightRedId,\n      fightBlueId,\n      fightAttackJudge1,\n      fightAttackJudge2,\n      fightAttackJudge3,\n      fightDefenceJudge1,\n      fightDefenceJudge2,\n      fightDefenceJudge3,\n      fightMaxRounds,\n      fightRoundDuration,\n      fightAttackPointsForAction,\n      fightDefencePointsForAction\n    ) => dispatch(createFight(\n      fightRedId,\n      fightBlueId,\n      fightAttackJudge1,\n      fightAttackJudge2,\n      fightAttackJudge3,\n      fightDefenceJudge1,\n      fightDefenceJudge2,\n      fightDefenceJudge3,\n      fightMaxRounds,\n      fightRoundDuration,\n      fightAttackPointsForAction,\n      fightDefencePointsForAction\n    )),\n    updateFight: (id, data) => dispatch(updateFight(id, data)),\n    deleteFight: (id) => dispatch(deleteFight(id)),\n\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Fights);\n","import Fights from './Fights.jsx';\nexport default Fights;","import React, { Component } from \"react\";\nimport './Fighters.scss';\nimport { NavLink, Link, Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport {\n  requestFighters,\n  createFighter,\n  updateFighter,\n  deleteFighter,\n} from \"../../actions/index\";\nclass Fighters extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newFighterFirstname: \"\",\n      newFighterLastname: \"\",\n      updateFighterId: null,\n      updateFighterLastname: \"\",\n      updateFighterFirstname: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.props.requestFighters();\n  }\n\n  showFighterUpdateForm(id, first_name, last_name) {\n    this.setState({\n      updateFighterId: id,\n      updateFighterFirstname: first_name,\n      updateFighterLastname: last_name,\n    })\n  }\n\n  \n\n  updateFighter(id) {\n    this.props.updateFighter(id, this.state.updateFighterFirstname, this.state.updateFighterLastname)\n    this.setState({ updateFighterId: null });\n  }\n\n\n  hideFighterUpdateForm() {\n    this.setState({ updateFighterId: null });\n  }\n\n  deleteFighter(id) {\n    this.props.deleteFighter(id)\n  }\n\n  createFighter(e) {\n    this.props.createFighter(this.state.newFighterFirstname, this.state.newFighterLastname)\n    e.preventDefault();\n  }\n\n  newFighterFirstnameHandleChange = event => {\n    this.setState({ newFighterFirstname: event.target.value });\n  };\n\n  newFighterLastnameHandleChange = event => {\n    this.setState({ newFighterLastname: event.target.value });\n  };\n\n\n  updateFighterFirstnameHandleChange = event => {\n    this.setState({ updateFighterFirstname: event.target.value });\n  };\n\n  updateFighterLastnameHandleChange = event => {\n    this.setState({ updateFighterLastname: event.target.value });\n  };\n\n  render() {\n    return (\n\n      <div className=\"container\">\n\n        <div className=\"row\">\n          <div className=\"col-md-8 offset-md-2\">\n            <div className=\"card mt-2\">\n              <div className=\"card-body\">\n\n                <h5 className=\"card-title\">Все бойцы</h5>\n\n                {this.props.fighterCreateErrors && this.props.fighterCreateErrors.length > 0 &&\n                  <div className=\"row mb-2\">\n                    <div className=\"col-md-12 \">\n                      {this.props.fighterCreateErrors.map((item, index) =>\n                        <div className=\"alert alert-danger\" key={index.toString()}>\n                          {item}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                }\n\n                <div>\n                  <form>\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-md-4\">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Имя\"\n                          value={this.state.newFighterFirstname}\n                          onChange={this.newFighterFirstnameHandleChange}\n                        />\n                      </div>\n                      <div className=\"form-group col-md-4\">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Фамилия\"\n                          value={this.state.newFighterLastname}\n                          onChange={this.newFighterLastnameHandleChange}\n                        />\n                      </div>\n                      <div className=\"form-group col-md-4\">\n                        <button className=\"btn btn-secondary btn-block  \" onClick={this.createFighter.bind(this)}>Добавить</button>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n\n                <div>\n                  <table className=\"table  table-sm\">\n                    <tbody>\n\n                      {this.props.fighters && [].concat(this.props.fighters).map((fighter, index) =>\n\n                        <tr key={index.toString()}>\n                          <td>\n\n                            {\n                              fighter && this.state.updateFighterId == fighter.id ? (\n\n                                <form>\n                                  <div className=\"form-row\">\n                                    <div className=\"form-group col-md-6\">\n                                      <input type=\"text\" className=\"form-control\" placeholder=\"Имя\"\n                                        value={this.state.updateFighterFirstname}\n                                        onChange={this.updateFighterFirstnameHandleChange}\n                                      />\n                                    </div>\n                                    <div className=\"form-group col-md-6\">\n                                      <input type=\"text\" className=\"form-control\" placeholder=\"Фамилия\"\n                                        value={this.state.updateFighterLastname}\n                                        onChange={this.updateFighterLastnameHandleChange}\n                                      />\n                                    </div>\n                                  </div>\n                                </form>\n                              ) : (\n                                  <div>{fighter.first_name} {fighter.last_name}</div>\n                                )\n                            }\n\n                          </td>\n                          <td>\n                            {\n                              fighter && this.state.updateFighterId == fighter.id ? (\n                                <div className=\"btn-group float-right\" >\n                                  <button className=\"btn btn-secondary btn-sm  \" onClick={this.updateFighter.bind(this, fighter.id)}>Сохранить</button>\n                                  <button className=\"btn btn-danger btn-sm  \" onClick={this.hideFighterUpdateForm.bind(this)}>Отменить</button>\n                                </div>\n                              ) : (\n                                  <div className=\"btn-group float-right\" >\n                                    <button className=\"btn btn-secondary btn-sm\" onClick={this.showFighterUpdateForm.bind(this, fighter.id, fighter.first_name, fighter.last_name)}>Изменить</button>\n                                    <button className=\"btn btn-danger btn-sm\" onClick={this.deleteFighter.bind(this, fighter.id)}>Удалить</button>\n                                  </div>\n                                )\n                            }\n                          </td>\n                        </tr>\n                      )}\n\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    fighters: state.fighters,\n    fighterCreateErrors: state.fighterCreateErrors,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    requestFighters: () => dispatch(requestFighters()),\n    createFighter: (first_name, last_name) => dispatch(createFighter(first_name, last_name)),\n    updateFighter: (id, first_name, last_name) => dispatch(updateFighter(id, first_name, last_name)),\n    deleteFighter: (id) => dispatch(deleteFighter(id)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Fighters);\n","import Fighters from './Fighters.jsx';\nexport default Fighters;","import React, { Component } from \"react\";\nimport './Judges.scss';\nimport { NavLink, Link, Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport {\n  requestJudges,\n  updateJudge,\n  createJudge,\n  deleteJudge\n} from \"../../actions/index\";\nclass Judges extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newJudgeFirstname: \"\",\n      newJudgeLastname: \"\",\n      updateJudgeId: null,\n      updateJudgeLastname: \"\",\n      updateJudgeFirstname: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.props.requestJudges();\n\n  }\n\n  showJudgeUpdateForm(id, first_name, last_name) {\n    this.setState({\n      updateJudgeId: id,\n      updateJudgeFirstname: first_name,\n      updateJudgeLastname: last_name,\n    })\n  }\n\n  hideJudgeUpdateForm() {\n    this.setState({ updateJudgeId: null });\n  }\n\n  deleteJudge(id) {\n    this.props.deleteJudge(id)\n  }\n\n\n  createJudge(e) {\n    this.props.createJudge(this.state.newJudgeFirstname, this.state.newJudgeLastname)\n    e.preventDefault();\n  }\n\n  updateJudge(id) {\n    this.props.updateJudge(id, this.state.updateJudgeFirstname, this.state.updateJudgeLastname)\n    this.setState({ updateJudgeId: null });\n  }\n\n\n  newJudgeFirstnameHandleChange = event => {\n    this.setState({ newJudgeFirstname: event.target.value });\n  };\n\n  newJudgeLastnameHandleChange = event => {\n    this.setState({ newJudgeLastname: event.target.value });\n  };\n\n  updateJudgeFirstnameHandleChange = event => {\n    this.setState({ updateJudgeFirstname: event.target.value });\n  };\n\n  updateJudgeLastnameHandleChange = event => {\n    this.setState({ updateJudgeLastname: event.target.value });\n  };\n  render() {\n    return (\n\n      <div className=\"container\">\n        <div className=\"row\">\n\n\n          <div className=\"col-md-8 offset-md-2\">\n            <div className=\"card mt-2\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Все судьи</h5>\n\n                {this.props.judgeCreateErrors && this.props.judgeCreateErrors.length > 0 &&\n                  <div className=\"row mb-2\">\n                    <div className=\"col-md-12 \">\n                      {this.props.judgeCreateErrors.map((item, index) =>\n                        <div className=\"alert alert-danger\" key={index.toString()}>\n                          {item}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                }\n\n                <div>\n                  <form>\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-md-4\">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Имя\"\n                          value={this.state.newJudgeFirstname}\n                          onChange={this.newJudgeFirstnameHandleChange}\n                        />\n                      </div>\n                      <div className=\"form-group col-md-4\">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Фамилия\"\n                          value={this.state.newJudgeLastname}\n                          onChange={this.newJudgeLastnameHandleChange}\n                        />\n                      </div>\n                      <div className=\"form-group col-md-4\">\n                        <button className=\"btn btn-secondary btn-block\" onClick={this.createJudge.bind(this)}>Добавить</button>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n\n                <div>\n                  <table className=\"table  table-sm\">\n                    <tbody>\n\n                      {this.props.judges && [].concat(this.props.judges).map((judge, index) =>\n                        <tr key={index.toString()}>\n                          <td>\n\n                            {\n                              this.state.updateJudgeId == judge.id ? (\n\n                                <form>\n                                  <div className=\"form-row\">\n                                    <div className=\"form-group col-md-6\">\n                                      <input type=\"text\" className=\"form-control\" placeholder=\"Имя\"\n                                        value={this.state.updateJudgeFirstname}\n                                        onChange={this.updateJudgeFirstnameHandleChange}\n                                      />\n                                    </div>\n                                    <div className=\"form-group col-md-6\">\n                                      <input type=\"text\" className=\"form-control\" placeholder=\"Фамилия\"\n                                        value={this.state.updateJudgeLastname}\n                                        onChange={this.updateJudgeLastnameHandleChange}\n                                      />\n                                    </div>\n                                  </div>\n                                </form>\n                              ) : (\n                                  <div>{judge.first_name} {judge.last_name}</div>\n                                )\n                            }\n                          </td>\n                          <td>\n                            {\n                              this.state.updateJudgeId == judge.id ? (\n                                <div className=\"btn-group float-right\" >\n                                  <button className=\"btn btn-secondary btn-sm  \" onClick={this.updateJudge.bind(this, judge.id)}>Сохранить</button>\n                                  <button className=\"btn btn-danger btn-sm  \" onClick={this.hideJudgeUpdateForm.bind(this)}>Отменить</button>\n                                </div>\n                              ) : (\n                                  <div className=\"btn-group float-right\" >\n                                    <button className=\"btn btn-secondary btn-sm\" onClick={this.showJudgeUpdateForm.bind(this, judge.id, judge.first_name, judge.last_name)}>Изменить</button>\n                                    <button className=\"btn btn-danger btn-sm\" onClick={this.deleteJudge.bind(this, judge.id)}>Удалить</button>\n                                  </div>\n                                )\n                            }\n                          </td>\n                        </tr>\n                      )}\n\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    judges: state.judges,\n    judgeCreateErrors: state.judgeCreateErrors,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    requestJudges: () => dispatch(requestJudges()),\n    createJudge: (first_name, last_name) => dispatch(createJudge(first_name, last_name)),\n    updateJudge: (id, first_name, last_name) => dispatch(updateJudge(id, first_name, last_name)),\n    deleteJudge: (id) => dispatch(deleteJudge(id)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Judges);\n","import Judges from './Judges.jsx';\nexport default Judges;","import React, { Component } from \"react\";\nimport './Header.scss';\nimport { NavLink, Link, Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport {\n} from \"../../actions/index\";\n\nclass Header extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n\n      <nav className={`navbar navbar-expand-lg navbar-light bg-light `}>\n        <NavLink to={{ pathname: '/' }} className=\"navbar-brand\">Tournaments</NavLink>\n\n        <ul className=\"navbar-nav mr-auto pt-3 pt-lg-0\"  >\n          <li className=\"nav-item\">\n            <NavLink to={{ pathname: '/' }} className=\"nav-link\">Текущий бой</NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink to={{ pathname: '/fights' }} className=\"nav-link\">Все бои</NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink to={{ pathname: '/judges' }} className=\"nav-link\">Судья</NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink to={{ pathname: '/fighters' }} className=\"nav-link\">Бойцы</NavLink>\n          </li>\n\n        </ul>\n\n      </nav>\n    );\n  }\n\n}\n\n\nconst mapStateToProps = state => {\n  return {\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import Header from './Header.jsx';\nexport default Header;","import React, { Component } from 'react';\nimport Main from './views/Main';\nimport Fight from './views/Fight';\nimport Fights from './views/Fights';\nimport Fighters from './views/Fighters';\nimport Judges from './views/Judges';\nimport Header from './components/Header';\nimport './App.css';\nimport {\n  Switch,\n  Route,\n  withRouter\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={Main} />\n          <Route path='/fights/:id' component={Fight} />\n          <Route path='/fights' component={Fights} />\n          <Route path='/fighters' component={Fighters} />\n          <Route path='/judges' component={Judges} />\n        </Switch>\n      </>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  FIGHTS_LOADED,\n  FIGHTERS_LOADED,\n  JUDGES_LOADED,\n  ROUNDS_LOADED,\n  FIGHT_LOADED,\n  CURRENT_FIGHT_LOADED,\n  FIGHTER_CREATE_FAILURE,\n  FIGHT_CREATE_FAILURE,\n  JUDGE_CREATE_FAILURE,\n  FIGHTER_CREATE_REQUESTED,\n  FIGHT_CREATE_REQUESTED,\n  JUDGE_CREATE_REQUESTED\n} from \"../constants/action-types\";\n\nconst initialState = {\n  fighters: [],\n  judges: [],\n  fights: [],\n  rounds: [],\n  fighterCreateErrors: [],\n  fightCreateErrors: [],\n  judgeCreateErrors: [],\n  fight: {},\n  currentFight: null\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case FIGHTERS_LOADED:\n      return { ...state, fighters: action.payload };\n    case FIGHTS_LOADED:\n      return { ...state, fights: action.payload };\n    case JUDGES_LOADED:\n      return { ...state, judges: action.payload };\n    case ROUNDS_LOADED:\n      return { ...state, rounds: action.payload };\n    case FIGHTER_CREATE_FAILURE:\n      console.log(action)\n      if (action.error) {\n        return { ...state, fighterCreateErrors: action.error.response.data };\n      } else {\n        return { ...state, fighterCreateErrorserrors: action.data };\n      }\n    case FIGHT_CREATE_FAILURE:\n      if (action.error) {\n        return { ...state, fightCreateErrors: action.error.response.data };\n      } else {\n        return { ...state, fightCreateErrorserrors: action.data };\n      }\n    case JUDGE_CREATE_FAILURE:\n      if (action.error) {\n        return { ...state, judgeCreateErrors: action.error.response.data };\n      } else {\n        return { ...state, judgeCreateErrors: action.data };\n      }\n    case FIGHTER_CREATE_REQUESTED:\n      return { ...state, fighterCreateErrors: [] };\n    case FIGHT_CREATE_REQUESTED:\n      return { ...state, fightCreateErrors: [] };\n    case JUDGE_CREATE_REQUESTED:\n      return { ...state, judgeCreateErrors: [] };\n    case FIGHT_LOADED:\n      return { ...state, fight: action.payload };\n    case CURRENT_FIGHT_LOADED:\n      return { ...state, currentFight: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n\n","import {\n  FIGHTS_REQUESTED,\n  FIGHTS_LOADED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(FIGHTS_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    const payload = yield call(getData);\n    yield put({ type: FIGHTS_LOADED, payload });\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction getData() {\n  const url = '/fights';\n  return axios.get(`${api_root}${url}`).then(res => {\n    return res.data\n  })\n}\n","import {\n  FIGHTERS_REQUESTED,\n  FIGHTERS_LOADED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(FIGHTERS_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    const payload = yield call(getData);\n    yield put({ type: FIGHTERS_LOADED, payload });\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction getData() {\n  const url = '/fighters';\n  return axios.get(`${api_root}${url}`).then(res => {\n    return res.data\n  })\n}\n","import {\n  JUDGES_REQUESTED,\n  JUDGES_LOADED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(JUDGES_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    const payload = yield call(getData);\n    yield put({ type: JUDGES_LOADED, payload });\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction getData() {\n  const url = '/judges';\n  return axios.get(`${api_root}${url}`).then(res => {\n    return res.data\n  })\n}\n","import {\n  ROUNDS_REQUESTED,\n  ROUNDS_LOADED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(ROUNDS_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    const payload = yield call(getData);\n    yield put({ type: ROUNDS_LOADED, payload });\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction getData() {\n  const url = '/rounds';\n  return axios.get(`${api_root}${url}`).then(res => {\n    return res.data\n  })\n}\n","import {\n  FIGHTER_CREATE_REQUESTED,\n  FIGHTER_CREATE_LOADED,\n  FIGHTER_CREATE_FAILURE,\n  FIGHTERS_REQUESTED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest, all } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(FIGHTER_CREATE_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    const payload = yield call(getData, action.first_name, action.last_name);\n    const data = payload.data;\n    if (payload && payload.status == 201) {\n      yield all([\n        put({ type: FIGHTER_CREATE_LOADED, data }),\n        put({ type: FIGHTERS_REQUESTED })\n      ])\n    } else {\n      yield put({ type: FIGHTER_CREATE_FAILURE, data });\n    }\n  } catch (error) {\n    yield put({ type: FIGHTER_CREATE_FAILURE, error });\n    console.log(error);\n  }\n}\n\nfunction getData(first_name, last_name) {\n  const url = '/fighters';\n  return axios(`${api_root}${url}`, {\n    method: \"post\", withCredentials: true, data: {\n      first_name: first_name,\n      last_name: last_name\n    }\n  })\n}\n","import {\n  FIGHT_CREATE_REQUESTED,\n  FIGHT_CREATE_LOADED,\n  FIGHT_CREATE_FAILURE,\n  FIGHTS_REQUESTED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest, all } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(FIGHT_CREATE_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    const payload = yield call(getData,\n      action.fightRedId,\n      action.fightBlueId,\n      action.fightAttackJudge1,\n      action.fightAttackJudge2,\n      action.fightAttackJudge3,\n      action.fightDefenceJudge1,\n      action.fightDefenceJudge2,\n      action.fightDefenceJudge3,\n      action.fightMaxRounds,\n      action.fightRoundDuration,\n      action.fightAttackPointsForAction,\n      action.fightDefencePointsForAction\n    );\n    const data = payload.data;\n    if (payload && payload.status == 201) {\n      yield all([\n        put({ type: FIGHT_CREATE_LOADED, data }),\n        put({ type: FIGHTS_REQUESTED })\n      ])\n    } else {\n      yield put({ type: FIGHT_CREATE_FAILURE, data });\n    }\n  } catch (error) {\n    yield put({ type: FIGHT_CREATE_FAILURE, error });\n    console.log(error);\n  }\n}\n\nfunction getData(\n  fightRedId,\n  fightBlueId,\n  fightAttackJudge1,\n  fightAttackJudge2,\n  fightAttackJudge3,\n  fightDefenceJudge1,\n  fightDefenceJudge2,\n  fightDefenceJudge3,\n  fightMaxRounds,\n  fightRoundDuration,\n  fightAttackPointsForAction,\n  fightDefencePointsForAction\n) {\n  const url = '/fights';\n  return axios(`${api_root}${url}`, {\n    method: \"post\", withCredentials: true, data: {\n      red_fighter_id: fightRedId,\n      blue_fighter_id: fightBlueId,\n      attack_judge_1_id: fightAttackJudge1,\n      attack_judge_2_id: fightAttackJudge2,\n      attack_judge_3_id: fightAttackJudge3,\n      defence_judge_1_id: fightDefenceJudge1,\n      defence_judge_2_id: fightDefenceJudge2,\n      defence_judge_3_id: fightDefenceJudge3,\n      max_rounds: parseInt(fightMaxRounds),\n      round_duration: parseInt(fightRoundDuration),\n      attack_points_for_action: parseInt(fightAttackPointsForAction),\n      defence_points_for_action: parseInt(fightDefencePointsForAction)\n    }\n  })\n}\n","import {\n  FIGHTER_UPDATE_REQUESTED,\n  FIGHTER_UPDATE_LOADED,\n  FIGHTER_UPDATE_FAILURE,\n  FIGHTERS_REQUESTED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest, all } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(FIGHTER_UPDATE_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    const payload = yield call(getData, action.id, action.first_name, action.last_name);\n    const data = payload.data;\n    if (payload) {\n      yield all([\n        put({ type: FIGHTER_UPDATE_LOADED, data }),\n        put({ type: FIGHTERS_REQUESTED })\n      ])\n    } else {\n      yield put({ type: FIGHTER_UPDATE_FAILURE, data });\n    }\n  } catch (error) {\n    yield put({ type: FIGHTER_UPDATE_FAILURE, error });\n    console.log(error);\n  }\n}\n\nfunction getData(id, first_name, last_name) {\n  const url = '/fighters/' + id;\n  return axios(`${api_root}${url}`, {\n    method: \"put\", withCredentials: true, data: {\n      first_name: first_name,\n      last_name: last_name\n    }\n  })\n}\n","import {\n  FIGHT_UPDATE_REQUESTED,\n  FIGHT_UPDATE_LOADED,\n  FIGHT_UPDATE_FAILURE,\n  FIGHTS_REQUESTED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest, all } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(FIGHT_UPDATE_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    const payload = yield call(getData, action.id, action.data);\n    const data = payload.data;\n    if (payload) {\n      yield all([\n        put({ type: FIGHT_UPDATE_LOADED, data }),\n        put({ type: FIGHTS_REQUESTED })\n      ])\n    } else {\n      yield put({ type: FIGHT_UPDATE_FAILURE, data });\n    }\n  } catch (error) {\n    yield put({ type: FIGHT_UPDATE_FAILURE, error });\n    console.log(error);\n  }\n}\n\nfunction getData(id, data) {\n  const url = '/fights/' + id;\n  return axios(`${api_root}${url}`, {\n    method: \"patch\", withCredentials: true, data: { fight: data }\n  })\n}\n","import {\n  FIGHT_START_REQUESTED,\n  FIGHT_START_LOADED,\n  FIGHT_START_FAILURE,\n  FIGHTS_REQUESTED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest, all } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(FIGHT_START_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    const payload = yield call(getData, action.id);\n    const data = payload.data;\n    if (payload) {\n      yield all([\n        put({ type: FIGHT_START_LOADED, data }),\n        put({ type: FIGHTS_REQUESTED })\n      ])\n    } else {\n      yield put({ type: FIGHT_START_FAILURE, data });\n    }\n  } catch (error) {\n    yield put({ type: FIGHT_START_FAILURE, error });\n    console.log(error);\n  }\n}\n\nfunction getData(id) {\n  const url = '/fights/' + id + '/start';\n  return axios(`${api_root}${url}`, {\n    method: \"put\", withCredentials: true\n  })\n}\n","import {\n  FIGHT_FINISH_REQUESTED,\n  FIGHT_FINISH_LOADED,\n  FIGHT_FINISH_FAILURE,\n  FIGHTS_REQUESTED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest, all } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(FIGHT_FINISH_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    const payload = yield call(getData, action.id);\n    const data = payload.data;\n    if (payload) {\n      yield all([\n        put({ type: FIGHT_FINISH_LOADED, data }),\n        put({ type: FIGHTS_REQUESTED })\n      ])\n    } else {\n      yield put({ type: FIGHT_FINISH_FAILURE, data });\n    }\n  } catch (error) {\n    yield put({ type: FIGHT_FINISH_FAILURE, error });\n    console.log(error);\n  }\n}\n\nfunction getData(id) {\n  const url = '/fights/' + id + '/finish';\n  return axios(`${api_root}${url}`, {\n    method: \"put\", withCredentials: true\n  })\n}\n","import {\n  ROUND_UPDATE_REQUESTED,\n  ROUND_UPDATE_LOADED,\n  ROUND_UPDATE_FAILURE,\n  FIGHTS_REQUESTED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest, all } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(ROUND_UPDATE_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    const payload = yield call(getData, action.id, action.data);\n    const data = payload.data;\n    if (payload) {\n      yield all([\n        put({ type: ROUND_UPDATE_LOADED, data }),\n      ])\n    } else {\n      yield put({ type: ROUND_UPDATE_FAILURE, data });\n    }\n  } catch (error) {\n    yield put({ type: ROUND_UPDATE_FAILURE, error });\n    console.log(error);\n  }\n}\n\nfunction getData(id, data) {\n  const url = '/rounds/' + id;\n  return axios(`${api_root}${url}`, {\n    method: \"patch\", withCredentials: true, data: { round: data }\n  })\n}\n","import {\n  ROUND_START_REQUESTED,\n  ROUND_START_LOADED,\n  ROUND_START_FAILURE,\n  FIGHTS_REQUESTED,\n  CURRENT_FIGHT_REQUESTED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest, all } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(ROUND_START_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    const payload = yield call(getData, action.id);\n    const data = payload.data;\n    if (payload) {\n      yield all([\n        put({ type: ROUND_START_LOADED, data }),\n        put({ type: CURRENT_FIGHT_REQUESTED }),\n      ])\n    } else {\n      yield put({ type: ROUND_START_FAILURE, data });\n    }\n  } catch (error) {\n    yield put({ type: ROUND_START_FAILURE, error });\n    console.log(error);\n  }\n}\n\nfunction getData(id, data) {\n  const url = '/rounds/' + id + '/start';\n  return axios(`${api_root}${url}`, {\n    method: \"put\", withCredentials: true\n  })\n}\n","import {\n  ROUND_PAUSE_REQUESTED,\n  ROUND_PAUSE_LOADED,\n  ROUND_PAUSE_FAILURE,\n  FIGHTS_REQUESTED,\n  CURRENT_FIGHT_REQUESTED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest, all } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(ROUND_PAUSE_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    const payload = yield call(getData, action.id);\n    const data = payload.data;\n    if (payload) {\n      yield all([\n        put({ type: ROUND_PAUSE_LOADED, data }),\n        put({ type: CURRENT_FIGHT_REQUESTED }),\n      ])\n    } else {\n      yield put({ type: ROUND_PAUSE_FAILURE, data });\n    }\n  } catch (error) {\n    yield put({ type: ROUND_PAUSE_FAILURE, error });\n    console.log(error);\n  }\n}\n\nfunction getData(id, data) {\n  const url = '/rounds/' + id + '/pause';\n  return axios(`${api_root}${url}`, {\n    method: \"put\", withCredentials: true\n  })\n}\n","import {\n  ROUND_STOP_REQUESTED,\n  ROUND_STOP_LOADED,\n  ROUND_STOP_FAILURE,\n  FIGHTS_REQUESTED,\n  CURRENT_FIGHT_REQUESTED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest, all } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(ROUND_STOP_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    const payload = yield call(getData, action.id);\n    const data = payload.data;\n    if (payload) {\n      yield all([\n        put({ type: ROUND_STOP_LOADED, data }),\n        put({ type: CURRENT_FIGHT_REQUESTED }),\n      ])\n    } else {\n      yield put({ type: ROUND_STOP_FAILURE, data });\n    }\n  } catch (error) {\n    yield put({ type: ROUND_STOP_FAILURE, error });\n    console.log(error);\n  }\n}\n\nfunction getData(id, data) {\n  const url = '/rounds/' + id + '/stop';\n  return axios(`${api_root}${url}`, {\n    method: \"put\", withCredentials: true\n  })\n}\n","import {\n  JUDGE_UPDATE_REQUESTED,\n  JUDGE_UPDATE_LOADED,\n  JUDGE_UPDATE_FAILURE,\n  JUDGES_REQUESTED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest, all } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(JUDGE_UPDATE_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    const payload = yield call(getData, action.id, action.first_name, action.last_name);\n    const data = payload.data;\n    if (payload) {\n      yield all([\n        put({ type: JUDGE_UPDATE_LOADED, data }),\n        put({ type: JUDGES_REQUESTED })\n      ])\n    } else {\n      yield put({ type: JUDGE_UPDATE_FAILURE, data });\n    }\n  } catch (error) {\n    yield put({ type: JUDGE_UPDATE_FAILURE, error });\n    console.log(error);\n  }\n}\n\nfunction getData(id, first_name, last_name) {\n  const url = '/judges/' + id;\n  return axios(`${api_root}${url}`, {\n    method: \"put\", withCredentials: true, data: {\n      first_name: first_name,\n      last_name: last_name\n    }\n  })\n}\n","import {\n  FIGHTER_DELETE_REQUESTED,\n  FIGHTER_DELETE_LOADED,\n  FIGHTER_DELETE_FAILURE,\n  FIGHTERS_REQUESTED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest, all } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(FIGHTER_DELETE_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    const payload = yield call(getData, action.id);\n    const data = payload.data;\n    if (payload) {\n      yield all([\n        put({ type: FIGHTER_DELETE_LOADED, data }),\n        put({ type: FIGHTERS_REQUESTED })\n      ])\n    } else {\n      yield put({ type: FIGHTER_DELETE_FAILURE, data });\n    }\n  } catch (error) {\n    yield put({ type: FIGHTER_DELETE_FAILURE, error });\n    console.log(error);\n  }\n}\n\nfunction getData(id) {\n  const url = '/fighters/' + id;\n  return axios(`${api_root}${url}`, {\n    method: \"delete\", withCredentials: true\n  })\n}\n","import {\n  FIGHT_DELETE_REQUESTED,\n  FIGHT_DELETE_LOADED,\n  FIGHT_DELETE_FAILURE,\n  FIGHTS_REQUESTED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest, all } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(FIGHT_DELETE_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    const payload = yield call(getData, action.id);\n    const data = payload.data;\n    if (payload) {\n      yield all([\n        put({ type: FIGHT_DELETE_LOADED, data }),\n        put({ type: FIGHTS_REQUESTED })\n      ])\n    } else {\n      yield put({ type: FIGHT_DELETE_FAILURE, data });\n    }\n  } catch (error) {\n    yield put({ type: FIGHT_DELETE_FAILURE, error });\n    console.log(error);\n  }\n}\n\nfunction getData(id) {\n  const url = '/fights/' + id;\n  return axios(`${api_root}${url}`, {\n    method: \"delete\", withCredentials: true\n  })\n}\n","import {\n  JUDGE_DELETE_REQUESTED,\n  JUDGE_DELETE_LOADED,\n  JUDGE_DELETE_FAILURE,\n  JUDGES_REQUESTED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest, all } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(JUDGE_DELETE_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    const payload = yield call(getData, action.id);\n    const data = payload.data;\n    if (payload) {\n      yield all([\n        put({ type: JUDGE_DELETE_LOADED, data }),\n        put({ type: JUDGES_REQUESTED })\n      ])\n    } else {\n      yield put({ type: JUDGE_DELETE_FAILURE, data });\n    }\n  } catch (error) {\n    yield put({ type: JUDGE_DELETE_FAILURE, error });\n    console.log(error);\n  }\n}\n\nfunction getData(id) {\n  const url = '/judges/' + id;\n  return axios(`${api_root}${url}`, {\n    method: \"delete\", withCredentials: true\n  })\n}\n","import {\n  JUDGE_CREATE_REQUESTED,\n  JUDGE_CREATE_LOADED,\n  JUDGE_CREATE_FAILURE,\n  JUDGES_REQUESTED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest, all } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(JUDGE_CREATE_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    const payload = yield call(getData, action.first_name, action.last_name);\n    const data = payload.data;\n\n    if (payload && payload.status == 201) {\n      yield all([\n        put({ type: JUDGE_CREATE_LOADED, data }),\n        put({ type: JUDGES_REQUESTED })\n      ])\n    } else {\n      yield put({ type: JUDGE_CREATE_FAILURE, data });\n    }\n  } catch (error) {\n    yield put({ type: JUDGE_CREATE_FAILURE, error });\n    console.log(error);\n  }\n}\n\nfunction getData(first_name, last_name) {\n  const url = '/judges';\n  return axios(`${api_root}${url}`, {\n    method: \"post\", withCredentials: true, data: {\n      first_name: first_name,\n      last_name: last_name\n    }\n  })\n}\n","import {\n  ROUND_CREATE_REQUESTED,\n  ROUND_CREATE_LOADED,\n  ROUND_CREATE_FAILURE,\n  FIGHTS_REQUESTED,\n  CURRENT_FIGHT_REQUESTED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest, all } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(ROUND_CREATE_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    console.log(action);\n    const payload = yield call(getData,\n      action.fightId, action.number\n    );\n    const data = payload.data;\n    if (payload && payload.status == 201) {\n      yield all([\n        put({ type: ROUND_CREATE_LOADED, data }),\n        put({ type: CURRENT_FIGHT_REQUESTED }),\n      ])\n    } else {\n      yield put({ type: ROUND_CREATE_FAILURE, data });\n    }\n  } catch (error) {\n    yield put({ type: ROUND_CREATE_FAILURE, error });\n    console.log(error);\n  }\n}\n\nfunction getData(\n  fightId,\n  number\n) {\n  const url = '/rounds';\n  return axios(`${api_root}${url}`, {\n    method: \"post\", withCredentials: true, data: {\n      fight_id: fightId,\n      number: number\n    }\n  })\n}\n","import {\n  FIGHT_REQUESTED,\n  FIGHT_LOADED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(FIGHT_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    const payload = yield call(getData, action.id);\n    yield put({ type: FIGHT_LOADED, payload });\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction getData(id) {\n  const url = '/fights/' + id;\n  return axios.get(`${api_root}${url}`).then(res => {\n    return res.data\n  })\n}\n","import {\n  CURRENT_FIGHT_REQUESTED,\n  CURRENT_FIGHT_LOADED\n} from \"../constants/action-types\";\n\nimport { takeEvery, call, put, takeLatest } from \"redux-saga/effects\";\nimport queryString from 'query-string'\nimport axios from 'axios';\nconst api_root = process.env.REACT_APP_API_URL\n\nexport default function* watcherSaga() {\n  yield takeLatest(CURRENT_FIGHT_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga(action) {\n  try {\n    const payload = yield call(getData);\n    yield put({ type: CURRENT_FIGHT_LOADED, payload });\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction getData() {\n  const url = '/fights/current';\n  return axios.get(`${api_root}${url}`).then(res => {\n    return res.data\n  })\n}\n","import FightsSaga from './FightsSaga';\nimport FightersSaga from './FightersSaga';\nimport JudgesSaga from './JudgesSaga';\nimport RoundsSaga from './RoundsSaga';\nimport AddFighterSaga from './AddFighterSaga';\nimport AddFightSaga from './AddFightSaga';\nimport UpdateFighterSaga from './UpdateFighterSaga';\nimport UpdateFightSaga from './UpdateFightSaga';\nimport StartFightSaga from './StartFightSaga';\nimport FinishFightSaga from './FinishFightSaga';\nimport UpdateRoundSaga from './UpdateRoundSaga';\nimport StartRoundSaga from './StartRoundSaga';\nimport PauseRoundSaga from './PauseRoundSaga';\nimport StopRoundSaga from './StopRoundSaga';\nimport UpdateJudgeSaga from './UpdateJudgeSaga';\nimport DeleteFighterSaga from './DeleteFighterSaga';\nimport DeleteFightSaga from './DeleteFightSaga';\nimport DeleteJudgeSaga from './DeleteJudgeSaga';\nimport AddJudgeSaga from './AddJudgeSaga';\nimport AddRoundSaga from './AddRoundSaga';\nimport FightSaga from './FightSaga';\nimport CurrentFightSaga from './CurrentFightSaga';\nimport { all, call } from 'redux-saga/effects';\n\nexport default function* rootSaga() {\n  yield all([\n    call(FightsSaga),\n    call(FightersSaga),\n    call(JudgesSaga),\n    call(FightSaga),\n    call(RoundsSaga),\n    call(CurrentFightSaga),\n    call(AddFighterSaga),\n    call(AddFightSaga),\n    call(UpdateFighterSaga),\n    call(UpdateFightSaga),\n    call(StartFightSaga),\n    call(FinishFightSaga),\n    call(UpdateJudgeSaga),\n    call(DeleteFighterSaga),\n    call(DeleteFightSaga),\n    call(DeleteJudgeSaga),\n    call(AddJudgeSaga),\n    call(AddRoundSaga),\n    call(UpdateRoundSaga),\n    call(StartRoundSaga),\n    call(PauseRoundSaga),\n    call(StopRoundSaga),\n  ])\n}","import { createStore, compose, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas\";\nconst initialiseSagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(initialiseSagaMiddleware)\n  )\n);\n\ninitialiseSagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Router>\n        <App />\n      </Router>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}