{"ast":null,"code":"import { FIGHTS_LOADED, FIGHTERS_LOADED, JUDGES_LOADED, ROUNDS_LOADED, FIGHT_LOADED, CURRENT_FIGHT_LOADED, FIGHTER_CREATE_FAILURE, FIGHT_CREATE_FAILURE, JUDGE_CREATE_FAILURE, FIGHTER_CREATE_REQUESTED, FIGHT_CREATE_REQUESTED, JUDGE_CREATE_REQUESTED } from \"../constants/action-types\";\nconst initialState = {\n  fighters: [],\n  judges: [],\n  fights: [],\n  rounds: [],\n  fighterCreateErrors: [],\n  fightCreateErrors: [],\n  judgeCreateErrors: [],\n  fight: {},\n  currentFight: null\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case FIGHTERS_LOADED:\n      return { ...state,\n        fighters: action.payload\n      };\n\n    case FIGHTS_LOADED:\n      return { ...state,\n        fights: action.payload\n      };\n\n    case JUDGES_LOADED:\n      return { ...state,\n        judges: action.payload\n      };\n\n    case ROUNDS_LOADED:\n      return { ...state,\n        rounds: action.payload\n      };\n\n    case FIGHTER_CREATE_FAILURE:\n      console.log(action);\n\n      if (action.error) {\n        return { ...state,\n          fighterCreateErrors: action.error.response.data\n        };\n      } else {\n        return { ...state,\n          fighterCreateErrorserrors: action.data\n        };\n      }\n\n    case FIGHT_CREATE_FAILURE:\n      if (action.error) {\n        return { ...state,\n          fightCreateErrors: action.error.response.data\n        };\n      } else {\n        return { ...state,\n          fightCreateErrorserrors: action.data\n        };\n      }\n\n    case JUDGE_CREATE_FAILURE:\n      if (action.error) {\n        return { ...state,\n          judgeCreateErrors: action.error.response.data\n        };\n      } else {\n        return { ...state,\n          judgeCreateErrors: action.data\n        };\n      }\n\n    case FIGHTER_CREATE_REQUESTED:\n      return { ...state,\n        fighterCreateErrors: []\n      };\n\n    case A:\n      // Я добавил\n      return { ...state,\n        fighterCreateErrors: []\n      };\n\n    case FIGHT_CREATE_REQUESTED:\n      return { ...state,\n        fightCreateErrors: []\n      };\n\n    case JUDGE_CREATE_REQUESTED:\n      return { ...state,\n        judgeCreateErrors: []\n      };\n\n    case FIGHT_LOADED:\n      return { ...state,\n        fight: action.payload\n      };\n\n    case CURRENT_FIGHT_LOADED:\n      return { ...state,\n        currentFight: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\n;\nexport default rootReducer;","map":{"version":3,"sources":["/home/daniil/Работа по програмированию/tournament-admin/src/reducers/index.js"],"names":["FIGHTS_LOADED","FIGHTERS_LOADED","JUDGES_LOADED","ROUNDS_LOADED","FIGHT_LOADED","CURRENT_FIGHT_LOADED","FIGHTER_CREATE_FAILURE","FIGHT_CREATE_FAILURE","JUDGE_CREATE_FAILURE","FIGHTER_CREATE_REQUESTED","FIGHT_CREATE_REQUESTED","JUDGE_CREATE_REQUESTED","initialState","fighters","judges","fights","rounds","fighterCreateErrors","fightCreateErrors","judgeCreateErrors","fight","currentFight","rootReducer","state","action","type","payload","console","log","error","response","data","fighterCreateErrorserrors","fightCreateErrorserrors","A"],"mappings":"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","sourcesContent":["import {\n  FIGHTS_LOADED,\n  FIGHTERS_LOADED,\n  JUDGES_LOADED,\n  ROUNDS_LOADED,\n  FIGHT_LOADED,\n  CURRENT_FIGHT_LOADED,\n  FIGHTER_CREATE_FAILURE,\n  FIGHT_CREATE_FAILURE,\n  JUDGE_CREATE_FAILURE,\n  FIGHTER_CREATE_REQUESTED,\n  FIGHT_CREATE_REQUESTED,\n  JUDGE_CREATE_REQUESTED,\n\n} from \"../constants/action-types\";\n\nconst initialState = {\n  fighters: [],\n  judges: [],\n  fights: [],\n  rounds: [],\n  fighterCreateErrors: [],\n  fightCreateErrors: [],\n  judgeCreateErrors: [],\n  fight: {},\n  currentFight: null\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case FIGHTERS_LOADED:\n      return { ...state, fighters: action.payload };\n    case FIGHTS_LOADED:\n      return { ...state, fights: action.payload };\n    case JUDGES_LOADED:\n      return { ...state, judges: action.payload };\n    case ROUNDS_LOADED:\n      return { ...state, rounds: action.payload };\n    case FIGHTER_CREATE_FAILURE:\n      console.log(action)\n      if (action.error) {\n        return { ...state, fighterCreateErrors: action.error.response.data };\n      } else {\n        return { ...state, fighterCreateErrorserrors: action.data };\n      }\n    case FIGHT_CREATE_FAILURE:\n      if (action.error) {\n        return { ...state, fightCreateErrors: action.error.response.data };\n      } else {\n        return { ...state, fightCreateErrorserrors: action.data };\n      }\n    case JUDGE_CREATE_FAILURE:\n      if (action.error) {\n        return { ...state, judgeCreateErrors: action.error.response.data };\n      } else {\n        return { ...state, judgeCreateErrors: action.data };\n      }\n    case FIGHTER_CREATE_REQUESTED:\n      return { ...state, fighterCreateErrors: [] };\n    case A:  // Я добавил\n      return { ...state, fighterCreateErrors: [] };\n    case FIGHT_CREATE_REQUESTED:\n      return { ...state, fightCreateErrors: [] };\n    case JUDGE_CREATE_REQUESTED:\n      return { ...state, judgeCreateErrors: [] };\n    case FIGHT_LOADED:\n      return { ...state, fight: action.payload };\n    case CURRENT_FIGHT_LOADED:\n      return { ...state, currentFight: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n\n"]},"metadata":{},"sourceType":"module"}